function [pos,vel] = OrbitPropogator(time_JD,planet)

    % GM of sun
    mu = 1.327124e11;
    
    switch planet
        case 'Earth'
            
            a = 149.596e6;                      % semi-major axis
            e = 0.01671022;                     % eccentricity
            i = 0.00005 * pi/180;               % inclination
%             i = 0.0028;
%             Omega = 176;                % deg
%             omega = 287;                % deg
            
            Omega = -11.26064 * pi/180;         % RAAN
            omega = 102.94719 * pi/180;         % argument of the perigee
            L = 100.46435 * pi/180;             % mean longitude at J2000
            T = 365.256 * 86400;                % period
            
%             M0 = 3.57e2;                % deg
            
            
%             MJD = 58849 * 86400;                % s
            
        case 'Mars'
            
            a = 227.923e6;                      % semi-major axis
            e = 0.09341233;                     % eccentricity
            i = 1.85061 * pi/180;               % inclination
            Omega = 49.57854 * pi/180;          % RAAN
            omega = 336.04084 * pi/180;         % argument of the perigee
            L = 355.45332 * pi/180;                   % mean longitude at J2000
            T = 686.980 * 86400;                % period
            
%             M0 = 247.0695356457666;     % deg
%             MJD = 58849 * 86400;                % s
            
    end
    
    % mean anomaly at J2000
    M_J2000 = L - Omega - omega;
    
    time_J2000 = time_JD - 2451545.0;
    time_sec = time_J2000 * 86400;
     
    Me = M_J2000 + (2*pi/T) * time_sec;
    
    
    E = kepler(e,Me,1e-10);
    theta = 2*atan(tan(E/2) * sqrt((1 + e)/(1 - e)));   % rad
    
    % calculate specific angular momentum
    h = sqrt(a*mu*(1 - e^2));
    
    % position and velocity in perifocal coord. frame
    r_PF = h^2./(mu*(1 + e*cos(theta))) ...
        .* [cos(theta); sin(theta); zeros(size(theta))];
    v_PF = mu/h * [-sin(theta); e + cos(theta); zeros(size(theta))];
    
    % transform perifocal to heliocentric equatorial system
    R1 = EulerRotation('z',-omega);
    R2 = EulerRotation('x',-i);
    R3 = EulerRotation('z',-Omega);
    
    r_HEC = R3*R2*R1*r_PF;
    v_HEC = R3*R2*R1*v_PF;
    
    pos = r_HEC';
    vel = v_HEC';
end